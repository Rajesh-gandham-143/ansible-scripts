---
- name: Ensure destination base directories exist
  file:
    path: "{{ item.dest }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0755'
  loop: "{{ git_repos }}"

- name: Check if repo directories already exist
  stat:
    path: "{{ item.dest }}/{{ item.repo_name }}"
  loop: "{{ git_repos }}"
  register: repo_stats

- name: Clone Git repositories if not already present
  ansible.builtin.git:
    repo: "{{ item.item.repo }}"
    dest: "{{ item.item.dest }}/{{ item.item.repo_name }}"
    version: "{{ item.item.branch }}"
    key_file: "{{ ssh }}/id_rsa"
  loop: "{{ repo_stats.results }}"
  when: not item.stat.exists   # âœ… Only clone if directory does NOT exist
  environment:
    SSH_AUTH_SOCK: "{{ lookup('file', '/tmp/ssh_auth_sock') }}"
  become: false

 
# - name: Clone Git repositories
#   ansible.builtin.git:
#     repo: "{{ item.repo }}"
#     dest: "{{ item.dest }}/{{ item.repo_name }}"
#     version: "{{ item.branch }}"
#     key_file: "{{ ssh }}/id_rsa"
#   loop: "{{ git_repos }}"
#   environment:
#     SSH_AUTH_SOCK: "{{ lookup('file', '/tmp/ssh_auth_sock') }}"
#   become: false

- name: Symlink pojo-classes into core-services
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop: "{{ core_links }}"

- name: Symlink print-templates into core-services
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link    
  loop: "{{ core_links }}"

- name: Replace pom.xml files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0644'
  loop: "{{ pom_replacements }}"

- name: Copy missing custom JAR file
  copy:
    src: "{{ custom_jar.src }}"
    dest: "{{ custom_jar.dest }}"
    mode: '0644'

- name: Copy json file into retail
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop: "{{ json_file }}"

- name: Install custom JAR into Maven local repo
  shell: "{{ custom_jar.command }}"

- name: create and ensure repo for application_propeties
  file:
    path: "{{ repos }}/Compose-file"
    state: directory 
    mode: '0755'
    owner: "{{ user }}"
  loop: "{{ application_propeties }}"

- name: extract the application_propeties
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}/{{ item.name }}.properties"
  loop: "{{ application_propeties }}"

- name: Run build command inside repo
  shell: "{{ item.cmd }}"
  args:
    chdir: "{{ item.path }}"
  loop: "{{ maven_builds }}"

- name: copy entrypoint.sh file into the core-services
  copy:
    src: "{{ item.entrypath }}"
    dest: "{{ item.entrydest }}/entrypoint.sh"
    mode: '0644'
  loop: "{{ entrypoint }}"





    