############################################################# VARIABLES ########################################################################
##   ansible-galaxy collection install community.postgresql  

# need to execute this command one time in master server for postgres

user: "ubuntu"   # ownership of files

############################################################# MAIN URL #########################################################################

base_domain: 'ansible.cwcloud.in'
main_domain: '.cwcloud.in'

certbot_email: 'rajesh.g@exceloid.com'
certbot_subdomains:
  - "{{ base_domain }}"
  - "pos.{{ base_domain }}"
  - "apps.{{ base_domain }}"
  - "hub.{{ base_domain }}"
  - "services.{{ base_domain }}"
############################################### DOCKER PART ##############################################################################
docker_name: 'ansible' # THIS IS TO DEFINE THE NAME OF CONTAINERS AND IMAGES IN DOCKER  

############################################################# DATABASE RELATED INFORMATION ##############################################
postgres_version: 16
postgres_port: 8641         
postgres_host: 157.180.85.90
postgres_password: "ansible@123"
db_name: "{{docker_name}}"
db_user: postgres

tad_password: "exceloid@123"
############################################### DEFINE THE PATH OF MASTER SERVER #########################################################

ansible_project: '/home/rajesh/ansible-project'
templates: '/home/rajesh/ansible-project/templates'

############################################### DEFINE THE PATH OF SLAVE SERVER ##########################################################

repos: '/home/ubuntu/repos'                  
composefile: '/home/ubuntu/ansible'          ##NEED TO CHANGE THIS
ssh: "/home/ubuntu/.ssh"
ssh_key_path: "/home/ubuntu/.ssh/id_rsa"

############################################### ADD GIT RELATED INFORMATION ##############################################################

gitlab_url: "https://git.cwbos.com"
gitlab_token: ""   # Replace with your PAT
gitlab_key_title: "slave-server-key"         ##CHANGE THE TITILE FOR DIFFERENT SERVERS
############################################### CREATING NGINX CONF #######################################################################
frontends:
  - name: core
    subdomain: ""
    port: 30 #60
  - name: pos
    subdomain: pos
    port: 40 #70
  - name: apps
    subdomain: apps
    port: 3009 #3000
  - name: hub
    subdomain: hub
    port: 30004 #3005
  - name: redis
    subdomain: ""
    port: 5664 #6478


backend_services:
  - name: core-services
    port: 8084
  - name: retail-services
    port: 8085

###############################################CLONING GIT REPOS###############################################################################
git_repos:
  - repo_name: cw-core-services
    repo: "git@git.cwbos.com:cw-enterprise/services/cw-core-services.git"
    dest: "{{ repos }}"
    branch: "25Q2.1.0"
 
  - repo_name: cw-retail-services
    repo: "git@git.cwbos.com:cw-enterprise/services/cw-retail-services.git"
    dest: "{{ repos }}"
    branch: "25Q2.1.0"

  - repo_name: cw-print-templates
    repo: "git@git.cwbos.com:cw-enterprise/services/cw-print-templates.git"
    dest: "{{ repos }}"
    branch: "main"

  - repo_name: cw-pojo-classes
    repo: "git@git.cwbos.com:cw-enterprise/services/cw-pojo-classes.git"
    dest: "{{ repos }}"
    branch: "main"

  - repo_name: cw-core-frontend
    repo: "git@git.cwbos.com:cw-plg/front-end/cw-core-front-end.git"
    dest: "{{ repos }}"
    branch: "25Q2.1.0"


  - repo_name: fork-plg-pos
    repo: "git@git.cwbos.com:cw-plg/fork-plg-pos.git"
    dest: "{{ repos }}"
    branch: "25Q3.1.0"


  - repo_name: cw-auth-frontend
    repo: "git@git.cwbos.com:cw-plg/middle-ware/cw-auth.git"
    dest: "{{ repos }}"
    branch: "main"


  - repo_name: cw-hub-frontend
    repo: "git@git.cwbos.com:cw-hub/cw-api-hub/cw-api-hub.git"
    dest: "{{ repos }}"
    branch: "25Q2.1.0"


      
############################################### SERVICES ###############################################################################
# ✅ pom.xml files
pom_replacements:
  - repo: core-services
    src: "{{ ansible_project }}/files/pom_files/core.pom.xml"
    dest: "{{ repos }}/cw-core-services/pom.xml"

  - repo: retail-services
    src: "{{ ansible_project }}/files/pom_files/retail.pom.xml"
    dest: "{{ repos }}/cw-retail-services/pom.xml"


# ✅ Only symlinks for core-services
core_links:
  - src: "{{ repos }}/cw-pojo-classes/tables"
    dest: "{{ repos }}/cw-core-services/src/main/java/com/cw/erp/model/postgres/tables"

  - src: "{{ repos }}/cw-print-templates"
    dest: "{{ repos }}/cw-core-services/src/main/java/com/cw/erp/modules/cw-print-templates"

#MAVEN BUILDS
maven_builds:
  - name: core-services
    path: "{{ repos }}/cw-core-services"
    cmd: "mvn clean install -DskipTests"

  - name: retail-services
    path: "{{ repos }}/cw-retail-services"
    cmd: "mvn clean install -DskipTests"

#CUSTOM JAT INSTALLATION
custom_jar:
  src: "{{ ansible_project }}/files/ConvertToCurrency.jar"
  dest: "{{ repos }}/cw-core-services"    
  command: >
    mvn install:install-file
    -Dfile={{ repos }}/cw-core-services/ConvertToCurrency.jar
    -DgroupId=com.reporter.jasper
    -DartifactId=ConvertToWordPlugin
    -Dversion=1.0.0
    -Dpackaging=jar

#ENTRY POINT FOR CORE-SERVICES
entrypoint:
  - name: entrypoint
    entrypath: "{{ ansible_project }}/files/entrypoint.sh"
    entrydest: "{{ repos }}/cw-core-services"

#CUSTOM JSON FILE FOR RETAIL SERVICES
json_file:
  - name: json
    src: "{{ansible_project}}/files/sproutz-food-ordering.json"
    dest: "{{ repos }}/cw-retail-services/src/main/resources"

#APPLICATION PROPERTIES
application_propeties:
  - name: core_application
    src: "{{ ansible_project }}/templates/properties-file/core_application.properties"
    dest: "{{ composefile }}/Compose-file/"

  - name: retail_application
    src: "{{ ansible_project }}/templates/properties-file/retail_application.properties"
    dest: "{{ composefile }}/Compose-file/"

############################################### FRONTEND #############################################################################
envs:
  - name: Core_frontend_env
    src: "{{ templates }}/envs/core-frontend.j2"
    dest: "{{ repos }}/cw-core-frontend/.env"
  - name: pos_frontend_env
    src: "{{ templates }}/envs/pos-frontend.j2"
    dest: "{{ repos }}/fork-plg-pos/.env"
  - name: auth_frontend_env
    src: "{{ templates }}/envs/auth-frontend.j2"
    dest: "{{ repos }}/cw-auth-frontend/.env"
  - name: hub_frontend_env
    src: "{{ templates }}/envs/hub-frontend.j2"
    dest: "{{ repos }}/cw-hub-frontend/.env"

############################################### DOCKER ###############################################################################

#DOCKER IMAGES
docker_images:
  - name: core-services
    context: "{{ repos }}/cw-core-services"
    dockerfile: "{{ ansible_project }}/files/docker_files/Dockerfile.core-services"
    image_name: "core-services:latest"  # IMAGE NAME

  - name: retail-services
    context: "{{ repos }}/cw-retail-services"
    dockerfile: "{{ ansible_project }}/files/docker_files/Dockerfile.retail-services"
    image_name: "retail-services:latest"   # IMAGE NAME

  - name: core-frontend
    context: "{{ repos }}/cw-core-frontend"
    dockerfile: "{{ ansible_project }}/files/docker_files/Dockerfile.core_frontend"
    image_name: "{{docker_name}}-core-frontend:latest"   # IMAGE NAME

  - name: pos-frontend
    context: "{{ repos }}/fork-plg-pos"
    dockerfile: "{{ ansible_project }}/files/docker_files/Dockerfile.pos_frontend"
    image_name: "{{docker_name}}-pos-frontend:latest"   # IMAGE NAME

  - name: auth-frontend
    context: "{{ repos }}/cw-auth-frontend"
    dockerfile: "{{ ansible_project }}/files/docker_files/Dockerfile.auth_frontend"
    image_name: "{{docker_name}}-auth-frontend:latest"   # IMAGE NAME

  - name: hub-frontend
    context: "{{ repos }}/cw-hub-frontend"
    dockerfile: "{{ ansible_project }}/files/docker_files/Dockerfile.hub_frontend"
    image_name: "{{docker_name}}-hub-frontend:latest"   # IMAGE NAME


########################################## FRONTEND NGINX CONF FILES #####################################################
frontend_conf:
  - name: core-nginx-conf
    src: "{{templates}}/docker-nginx-conf/core-nginx.conf.j2"
    dest: "{{composefile}}/Compose-file/core-nginx.conf"
    
  - name: pos-nginx-conf
    src: "{{templates}}/docker-nginx-conf/pos-nginx.conf.j2"
    dest: "{{composefile}}/Compose-file/pos-nginx.conf"
########################################## SERVICE LOG DIRECTORIES #######################################################
log_repos:
  - name: core-service-logs
    dest: "{{ composefile }}/Compose-file/core-service-logs"

  - name: retail-service-logs
    dest: "{{ composefile }}/Compose-file/retail-logs"
########################################## DOCKER COMPOSE FILE ############################################################
docker_files:
  - name: Docker-compose
    src: "{{ ansible_project }}/templates/docker-compose.yml.j2"
    dest: "{{ composefile }}/Compose-file/docker-compose.yml"

docker_compose:
  - name: compose
    path: "{{ composefile }}/Compose-file"
    cmd: "docker compose up -d"

